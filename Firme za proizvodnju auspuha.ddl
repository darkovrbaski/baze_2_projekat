-- Generated by Oracle SQL Developer Data Modeler 20.3.0.283.0710
--   at:        2022-01-14 00:15:26 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE aparat_za_zavarivanje (
    idu     INTEGER NOT NULL,
    tipazz  VARCHAR2(30),
    idr     INTEGER,
    idf     INTEGER
);

ALTER TABLE aparat_za_zavarivanje ADD CONSTRAINT aparat_za_zavarivanje_pk PRIMARY KEY ( idu );

CREATE TABLE auspuh (
    idausp    INTEGER NOT NULL,
    nazausp   VARCHAR2(30),
    katausp   VARCHAR2(30),
    vrstausp  VARCHAR2(30),
    kolausp   INTEGER,
    idsklad   INTEGER NOT NULL,
    idro      INTEGER NOT NULL,
    idf       INTEGER NOT NULL,
    idu       INTEGER NOT NULL
);

ALTER TABLE auspuh ADD CONSTRAINT auspuh_pk PRIMARY KEY ( idausp );

CREATE TABLE firma (
    idf   INTEGER NOT NULL,
    nazf  VARCHAR2(30),
    adrf  VARCHAR2(30)
);

ALTER TABLE firma ADD CONSTRAINT firma_pk PRIMARY KEY ( idf );

CREATE TABLE je_nadredjen (
    idr  INTEGER NOT NULL,
    idf  INTEGER NOT NULL,
    idm  INTEGER NOT NULL
);

ALTER TABLE je_nadredjen
    ADD CONSTRAINT je_nadredjen_pk PRIMARY KEY ( idr,
                                                 idf,
                                                 idm );

CREATE TABLE je_obucen (
    idr  INTEGER NOT NULL,
    idf  INTEGER NOT NULL,
    idu  INTEGER NOT NULL
);

ALTER TABLE je_obucen
    ADD CONSTRAINT je_obucen_pk PRIMARY KEY ( idr,
                                              idf,
                                              idu );

CREATE TABLE magacioner (
    idr      INTEGER NOT NULL,
    idsklad  INTEGER NOT NULL,
    idf      INTEGER NOT NULL
);

ALTER TABLE magacioner ADD CONSTRAINT magacioner_pk PRIMARY KEY ( idr,
                                                                  idf );

CREATE TABLE masina_za_savijanje (
    idu INTEGER NOT NULL
);

ALTER TABLE masina_za_savijanje ADD CONSTRAINT masina_za_savijanje_pk PRIMARY KEY ( idu );

CREATE TABLE menadzer (
    idr  INTEGER NOT NULL,
    idf  INTEGER NOT NULL
);

ALTER TABLE menadzer ADD CONSTRAINT menadzer_pk PRIMARY KEY ( idr,
                                                              idf );

CREATE TABLE operater (
    idr  INTEGER NOT NULL,
    idf  INTEGER NOT NULL
);

ALTER TABLE operater ADD CONSTRAINT operater_pk PRIMARY KEY ( idr,
                                                              idf );

CREATE TABLE radi_na (
    idro  INTEGER NOT NULL,
    idf   INTEGER NOT NULL,
    idu   INTEGER NOT NULL
);

ALTER TABLE radi_na
    ADD CONSTRAINT radi_na_pk PRIMARY KEY ( idro,
                                            idf,
                                            idu );

CREATE TABLE radnik (
    idr     INTEGER NOT NULL,
    imer    VARCHAR2(30),
    przr    VARCHAR2(30),
    tipr    VARCHAR2(30) NOT NULL,
    brtelr  VARCHAR2(30),
    pltr    NUMBER(10, 2),
    idf     INTEGER NOT NULL,
    ids     INTEGER NOT NULL
);

ALTER TABLE radnik
    ADD CONSTRAINT ch_inh_radnik CHECK ( tipr IN ( 'Magacioner', 'Menadzer', 'Operater', 'Serviser', 'Zavarivac' ) );

ALTER TABLE radnik ADD CONSTRAINT radnik_pk PRIMARY KEY ( idr,
                                                          idf );

CREATE TABLE repromaterijal (
    idmat    INTEGER NOT NULL,
    nazmat   VARCHAR2(30),
    kolmat   INTEGER,
    idsklad  INTEGER NOT NULL
);

ALTER TABLE repromaterijal ADD CONSTRAINT repromaterijal_pk PRIMARY KEY ( idmat );

CREATE TABLE saradjuje (
    idf   INTEGER NOT NULL,
    idfs  INTEGER NOT NULL
);

ALTER TABLE saradjuje ADD CONSTRAINT saradjuje_pk PRIMARY KEY ( idf,
                                                                idfs );

CREATE TABLE sektor (
    ids   INTEGER NOT NULL,
    nazs  VARCHAR2(30),
    idf   INTEGER NOT NULL
);

COMMENT ON COLUMN sektor.nazs IS
    '		';

ALTER TABLE sektor ADD CONSTRAINT sektor_pk PRIMARY KEY ( ids,
                                                          idf );

CREATE TABLE serviser (
    idr  INTEGER NOT NULL,
    idf  INTEGER NOT NULL
);

ALTER TABLE serviser ADD CONSTRAINT serviser_pk PRIMARY KEY ( idr,
                                                              idf );

CREATE TABLE servisira (
    idserv  INTEGER NOT NULL,
    idf     INTEGER NOT NULL,
    idu     INTEGER NOT NULL
);

ALTER TABLE servisira
    ADD CONSTRAINT servisira_pk PRIMARY KEY ( idserv,
                                              idf,
                                              idu );

CREATE TABLE skladiste (
    idsklad   INTEGER NOT NULL,
    ids       INTEGER NOT NULL,
    idf       INTEGER NOT NULL,
    kapsklad  INTEGER,
    adrsklad  VARCHAR2(30),
    nazsklad  VARCHAR2(30)
);

ALTER TABLE skladiste ADD CONSTRAINT skladiste_pk PRIMARY KEY ( idsklad );

CREATE TABLE uredjaj (
    idu    INTEGER NOT NULL,
    tipu   VARCHAR2(30) NOT NULL,
    nazu   VARCHAR2(30),
    snagu  INTEGER,
    ids    INTEGER NOT NULL,
    idf    INTEGER NOT NULL
);

ALTER TABLE uredjaj
    ADD CONSTRAINT ch_inh_uredjaj CHECK ( tipu IN ( 'Aparat_za_zavarivanje', 'Masina_za_savijanje' ) );

ALTER TABLE uredjaj ADD CONSTRAINT uredjaj_pk PRIMARY KEY ( idu );

CREATE TABLE zavarivac (
    idr  INTEGER NOT NULL,
    idf  INTEGER NOT NULL
);

ALTER TABLE zavarivac ADD CONSTRAINT zavarivac_pk PRIMARY KEY ( idr,
                                                                idf );

ALTER TABLE auspuh
    ADD CONSTRAINT auspuh_radi_na_fk FOREIGN KEY ( idro,
                                                   idf,
                                                   idu )
        REFERENCES radi_na ( idro,
                             idf,
                             idu );

ALTER TABLE auspuh
    ADD CONSTRAINT auspuh_skladiste_fk FOREIGN KEY ( idsklad )
        REFERENCES skladiste ( idsklad );

ALTER TABLE aparat_za_zavarivanje
    ADD CONSTRAINT azz_uredjaj_fk FOREIGN KEY ( idu )
        REFERENCES uredjaj ( idu );

ALTER TABLE aparat_za_zavarivanje
    ADD CONSTRAINT azz_zavarivac_fk FOREIGN KEY ( idr,
                                                  idf )
        REFERENCES zavarivac ( idr,
                               idf );

ALTER TABLE je_nadredjen
    ADD CONSTRAINT je_nadredjen_menadzer_fk FOREIGN KEY ( idm,
                                                          idf )
        REFERENCES menadzer ( idr,
                              idf );

ALTER TABLE je_nadredjen
    ADD CONSTRAINT je_nadredjen_radnik_fk FOREIGN KEY ( idr,
                                                        idf )
        REFERENCES radnik ( idr,
                            idf );

ALTER TABLE je_obucen
    ADD CONSTRAINT je_obucen_mzs_fk FOREIGN KEY ( idu )
        REFERENCES masina_za_savijanje ( idu );

ALTER TABLE je_obucen
    ADD CONSTRAINT je_obucen_operater_fk FOREIGN KEY ( idr,
                                                       idf )
        REFERENCES operater ( idr,
                              idf );

ALTER TABLE magacioner
    ADD CONSTRAINT magacioner_radnik_fk FOREIGN KEY ( idr,
                                                      idf )
        REFERENCES radnik ( idr,
                            idf );

ALTER TABLE magacioner
    ADD CONSTRAINT magacioner_skladiste_fk FOREIGN KEY ( idsklad )
        REFERENCES skladiste ( idsklad );

ALTER TABLE menadzer
    ADD CONSTRAINT menadzer_radnik_fk FOREIGN KEY ( idr,
                                                    idf )
        REFERENCES radnik ( idr,
                            idf );

ALTER TABLE masina_za_savijanje
    ADD CONSTRAINT mzs_uredjaj_fk FOREIGN KEY ( idu )
        REFERENCES uredjaj ( idu );

ALTER TABLE operater
    ADD CONSTRAINT operater_radnik_fk FOREIGN KEY ( idr,
                                                    idf )
        REFERENCES radnik ( idr,
                            idf );

ALTER TABLE radi_na
    ADD CONSTRAINT radi_na_je_obucen_fk FOREIGN KEY ( idro,
                                                      idf,
                                                      idu )
        REFERENCES je_obucen ( idr,
                               idf,
                               idu );

ALTER TABLE radi_na
    ADD CONSTRAINT radi_na_operater_fk FOREIGN KEY ( idro,
                                                     idf )
        REFERENCES operater ( idr,
                              idf );

ALTER TABLE radnik
    ADD CONSTRAINT radnik_firma_fk FOREIGN KEY ( idf )
        REFERENCES firma ( idf );

ALTER TABLE radnik
    ADD CONSTRAINT radnik_sektor_fk FOREIGN KEY ( ids,
                                                  idf )
        REFERENCES sektor ( ids,
                            idf );

ALTER TABLE repromaterijal
    ADD CONSTRAINT repromaterijal_skladiste_fk FOREIGN KEY ( idsklad )
        REFERENCES skladiste ( idsklad );

ALTER TABLE saradjuje
    ADD CONSTRAINT saradjuje_firma_fk FOREIGN KEY ( idf )
        REFERENCES firma ( idf );

ALTER TABLE saradjuje
    ADD CONSTRAINT saradjuje_firma_fkv1 FOREIGN KEY ( idfs )
        REFERENCES firma ( idf );

ALTER TABLE sektor
    ADD CONSTRAINT sektor_firma_fk FOREIGN KEY ( idf )
        REFERENCES firma ( idf );

ALTER TABLE serviser
    ADD CONSTRAINT serviser_radnik_fk FOREIGN KEY ( idr,
                                                    idf )
        REFERENCES radnik ( idr,
                            idf );

ALTER TABLE servisira
    ADD CONSTRAINT servisira_serviser_fk FOREIGN KEY ( idserv,
                                                       idf )
        REFERENCES serviser ( idr,
                              idf );

ALTER TABLE servisira
    ADD CONSTRAINT servisira_uredjaj_fk FOREIGN KEY ( idu )
        REFERENCES uredjaj ( idu );

ALTER TABLE skladiste
    ADD CONSTRAINT skladiste_sektor_fk FOREIGN KEY ( ids,
                                                     idf )
        REFERENCES sektor ( ids,
                            idf );

ALTER TABLE uredjaj
    ADD CONSTRAINT uredjaj_sektor_fk FOREIGN KEY ( ids,
                                                   idf )
        REFERENCES sektor ( ids,
                            idf );

ALTER TABLE zavarivac
    ADD CONSTRAINT zavarivac_radnik_fk FOREIGN KEY ( idr,
                                                     idf )
        REFERENCES radnik ( idr,
                            idf );

CREATE OR REPLACE TRIGGER arc_fkarc_7_serviser BEFORE
    INSERT OR UPDATE OF idr, idf ON serviser
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipr
    INTO d
    FROM
        radnik a
    WHERE
            a.idr = :new.idr
        AND a.idf = :new.idf;

    IF ( d IS NULL OR d <> 'Serviser' ) THEN
        raise_application_error(-20223,
                               'FK Serviser_Radnik_FK in Table Serviser violates Arc constraint on Table Radnik - discriminator column TipR doesn''t have value ''Serviser''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_menadzer BEFORE
    INSERT OR UPDATE OF idr, idf ON menadzer
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipr
    INTO d
    FROM
        radnik a
    WHERE
            a.idr = :new.idr
        AND a.idf = :new.idf;

    IF ( d IS NULL OR d <> 'Menadzer' ) THEN
        raise_application_error(-20223,
                               'FK Menadzer_Radnik_FK in Table Menadzer violates Arc constraint on Table Radnik - discriminator column TipR doesn''t have value ''Menadzer''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_operater BEFORE
    INSERT OR UPDATE OF idr, idf ON operater
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipr
    INTO d
    FROM
        radnik a
    WHERE
            a.idr = :new.idr
        AND a.idf = :new.idf;

    IF ( d IS NULL OR d <> 'Operater' ) THEN
        raise_application_error(-20223,
                               'FK Operater_Radnik_FK in Table Operater violates Arc constraint on Table Radnik - discriminator column TipR doesn''t have value ''Operater''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_zavarivac BEFORE
    INSERT OR UPDATE OF idr, idf ON zavarivac
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipr
    INTO d
    FROM
        radnik a
    WHERE
            a.idr = :new.idr
        AND a.idf = :new.idf;

    IF ( d IS NULL OR d <> 'Zavarivac' ) THEN
        raise_application_error(-20223,
                               'FK Zavarivac_Radnik_FK in Table Zavarivac violates Arc constraint on Table Radnik - discriminator column TipR doesn''t have value ''Zavarivac''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_7_magacioner BEFORE
    INSERT OR UPDATE OF idr, idf ON magacioner
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipr
    INTO d
    FROM
        radnik a
    WHERE
            a.idr = :new.idr
        AND a.idf = :new.idf;

    IF ( d IS NULL OR d <> 'Magacioner' ) THEN
        raise_application_error(-20223,
                               'FK Magacioner_Radnik_FK in Table Magacioner violates Arc constraint on Table Radnik - discriminator column TipR doesn''t have value ''Magacioner''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc__masina_za_savijanje BEFORE
    INSERT OR UPDATE OF idu ON masina_za_savijanje
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipu
    INTO d
    FROM
        uredjaj a
    WHERE
        a.idu = :new.idu;

    IF ( d IS NULL OR d <> 'Masina_za_savijanje' ) THEN
        raise_application_error(-20223,
                               'FK Mzs_Uredjaj_FK in Table Masina_za_savijanje violates Arc constraint on Table Uredjaj - discriminator column TipU doesn''t have value ''Masina_za_savijanje''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkar_aparat_za_zavarivanje BEFORE
    INSERT OR UPDATE OF idu ON aparat_za_zavarivanje
    FOR EACH ROW
DECLARE
    d VARCHAR2(30);
BEGIN
    SELECT
        a.tipu
    INTO d
    FROM
        uredjaj a
    WHERE
        a.idu = :new.idu;

    IF ( d IS NULL OR d <> 'Aparat_za_zavarivanje' ) THEN
        raise_application_error(-20223,
                               'FK Azz_Uredjaj_FK in Table Aparat_za_zavarivanje violates Arc constraint on Table Uredjaj - discriminator column TipU doesn''t have value ''Aparat_za_zavarivanje''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             0
-- ALTER TABLE                             48
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
